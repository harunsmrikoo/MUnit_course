<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="5.munit-mock-when-test-suite.xml" />
	<munit:test name="animalsGETRequestSuccessTestCase" doc:id="1885d218-b584-4cd3-887b-7ef29e85a307" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - HTTP GET Request" doc:id="54575fd9-786c-401e-a9eb-6fc757504fff" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET Request - getAnimalsListPayload" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"animals": [&#10;		"animal": "cow",&#10;		"animal": "pig"&#10;	]&#10;}&#10;]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAnimals" doc:id="29ec788f-f551-4278-b45e-53719e4b91a7" name="getAnimals"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Log VALIDATION PAYLOAD" doc:id="eef8e416-1429-4945-9b8a-6169bf466089" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"Log VALIDATION PAYLOAD": payload&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="setPetNameSuccessTestCase" doc:id="1c1f07ab-47d3-4ec4-a57e-a88cb852d69c" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Zeus" doc:id="68ca2e1f-388c-4bae-a102-1e1b417fb341" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value='#["ZEUS"]' />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="1ab674c6-b854-4948-8ff0-90648b21cd36" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="2c70eb87-349a-4ec2-b1d9-12e89b3e1652" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope" : vars.myPetName&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="resetPetNameAfterNullSuccessTestCase" doc:id="2701c72c-66f3-4398-af94-02e2c0dcbcc4" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Null" doc:id="b76f45d6-8e03-4f0b-bc99-9aa51f700e02" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value="#[null]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="20b48200-1afe-46ed-8df1-96d86b3258f4" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="a1ed17f5-1809-4f00-a305-e9722c000059" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope" : vars.myPetName&#10;}]' />
		</munit:validation>
	</munit:test>
	<munit:test name="getFruitsSuccessTestCase" doc:id="41a428a9-72a7-41b8-8677-8f02d7d90e31" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - Flow Reference - generateFruitsName" doc:id="95ca1a3e-4d11-47d5-a98d-e3f574eb8963" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="generateFruitsName" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[&#10;	["banana", "orange", "apple"]&#10;]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFruitsName" doc:id="9735f2be-9f48-48f3-b807-46aeb429102a" name="getFruitsName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION PAYLOAD" doc:id="52db265e-a3c1-481a-8e92-0ea173b0f598" message='#[%dw 2.0

output application/json
---
{
	"log_payload_validation_scope" : payload
}]' />
		</munit:validation>
	</munit:test>


</mule>